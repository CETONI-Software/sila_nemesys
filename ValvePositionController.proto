// This file is automatically generated by sila2codegen.proto_generator0.1.9
// :generation date: 2019-07-08 14:10:24.002906

// ---- PLEASE DO NOT MODIFY MANUALLY !! ---

syntax = "proto3";

import "SiLAFramework.proto";

package sila2.de.cetoni.pumps.syringepumps.valvepositioncontroller.v1;

service ValvePositionController { 
	// Switches the valve to the specified position. The given position has to be less than the NumberOfPositions or else a ValidationError is thrown.
	rpc SwitchToPosition(sila2.de.cetoni.pumps.syringepumps.valvepositioncontroller.v1.SwitchToPosition_Parameters) returns (sila2.de.cetoni.pumps.syringepumps.valvepositioncontroller.v1.SwitchToPosition_Responses);

	// This command only applies for 2-way valves to toggle between its two different positions. If the command is called for any other valve type a ValveNotToggleable error is thrown.
	rpc TogglePosition(sila2.de.cetoni.pumps.syringepumps.valvepositioncontroller.v1.TogglePosition_Parameters) returns (sila2.de.cetoni.pumps.syringepumps.valvepositioncontroller.v1.TogglePosition_Responses);

	// remark: Property Parameters are always Empty
	rpc Get_NumberOfPositions(sila2.de.cetoni.pumps.syringepumps.valvepositioncontroller.v1.Get_NumberOfPositions_Parameters) returns (sila2.de.cetoni.pumps.syringepumps.valvepositioncontroller.v1.Get_NumberOfPositions_Responses);

	// remark: Property Parameters are always Empty
	rpc Subscribe_Position(sila2.de.cetoni.pumps.syringepumps.valvepositioncontroller.v1.Subscribe_Position_Parameters) returns (stream sila2.de.cetoni.pumps.syringepumps.valvepositioncontroller.v1.Subscribe_Position_Responses);

}

// ------ Data Type definitions -------

// ---- Command Parameter and Response Data Type definitions ----

// Parameter Message: basic integer type (64bit width)
message SwitchToPosition_Parameters {
	sila2.org.silastandard.Integer Position = 1;
}

// Response Message: basic logic/boolean type
message SwitchToPosition_Responses {
	sila2.org.silastandard.Boolean Success = 1;
}

// Parameter Message: void / empty type
message TogglePosition_Parameters {
}

// Response Message: basic logic/boolean type
message TogglePosition_Responses {
	sila2.org.silastandard.Boolean Success = 1;
}

// ---- Property Parameter and Response Data Type definitions ----

// The number of the valve positions available.
message Get_NumberOfPositions_Parameters { }

// NumberOfPositions_Response:
//    :param request: gRPC request
//            :param context: gRPC context
//            :param response.NumberOfPositions: The number of the valve positions available.
//
message Get_NumberOfPositions_Responses {
	 sila2.org.silastandard.Integer NumberOfPositions = 1;
}

// The current logic valve position. This is a value between 0 and NumberOfPositions - 1.
message Subscribe_Position_Parameters { }

// Position_Response:
//    :param request: gRPC request
//            :param context: gRPC context
//            :param response.Position: The current logic valve position. This is a value between 0 and NumberOfPositions - 1.
//
message Subscribe_Position_Responses {
	 sila2.org.silastandard.Integer Position = 1;
}

