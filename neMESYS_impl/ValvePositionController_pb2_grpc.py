# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import ValvePositionController_pb2 as ValvePositionController__pb2


class ValvePositionControllerStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SwitchToPosition = channel.unary_unary(
        '/sila2.de.cetoni.pumps.syringepumps.valvepositioncontroller.v1.ValvePositionController/SwitchToPosition',
        request_serializer=ValvePositionController__pb2.SwitchToPosition_Parameters.SerializeToString,
        response_deserializer=ValvePositionController__pb2.SwitchToPosition_Responses.FromString,
        )
    self.TogglePosition = channel.unary_unary(
        '/sila2.de.cetoni.pumps.syringepumps.valvepositioncontroller.v1.ValvePositionController/TogglePosition',
        request_serializer=ValvePositionController__pb2.TogglePosition_Parameters.SerializeToString,
        response_deserializer=ValvePositionController__pb2.TogglePosition_Responses.FromString,
        )
    self.Get_NumberOfPositions = channel.unary_unary(
        '/sila2.de.cetoni.pumps.syringepumps.valvepositioncontroller.v1.ValvePositionController/Get_NumberOfPositions',
        request_serializer=ValvePositionController__pb2.Get_NumberOfPositions_Parameters.SerializeToString,
        response_deserializer=ValvePositionController__pb2.Get_NumberOfPositions_Responses.FromString,
        )
    self.Subscribe_Position = channel.unary_stream(
        '/sila2.de.cetoni.pumps.syringepumps.valvepositioncontroller.v1.ValvePositionController/Subscribe_Position',
        request_serializer=ValvePositionController__pb2.Subscribe_Position_Parameters.SerializeToString,
        response_deserializer=ValvePositionController__pb2.Subscribe_Position_Responses.FromString,
        )


class ValvePositionControllerServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def SwitchToPosition(self, request, context):
    """Switches the valve to the specified position. The given position has to be less than the NumberOfPositions or else a ValidationError is thrown.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def TogglePosition(self, request, context):
    """This command only applies for 2-way valves to toggle between its two different positions. If the command is called for any other valve type a ValveNotToggleable error is thrown.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Get_NumberOfPositions(self, request, context):
    """remark: Property Parameters are always Empty
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Subscribe_Position(self, request, context):
    """remark: Property Parameters are always Empty
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ValvePositionControllerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SwitchToPosition': grpc.unary_unary_rpc_method_handler(
          servicer.SwitchToPosition,
          request_deserializer=ValvePositionController__pb2.SwitchToPosition_Parameters.FromString,
          response_serializer=ValvePositionController__pb2.SwitchToPosition_Responses.SerializeToString,
      ),
      'TogglePosition': grpc.unary_unary_rpc_method_handler(
          servicer.TogglePosition,
          request_deserializer=ValvePositionController__pb2.TogglePosition_Parameters.FromString,
          response_serializer=ValvePositionController__pb2.TogglePosition_Responses.SerializeToString,
      ),
      'Get_NumberOfPositions': grpc.unary_unary_rpc_method_handler(
          servicer.Get_NumberOfPositions,
          request_deserializer=ValvePositionController__pb2.Get_NumberOfPositions_Parameters.FromString,
          response_serializer=ValvePositionController__pb2.Get_NumberOfPositions_Responses.SerializeToString,
      ),
      'Subscribe_Position': grpc.unary_stream_rpc_method_handler(
          servicer.Subscribe_Position,
          request_deserializer=ValvePositionController__pb2.Subscribe_Position_Parameters.FromString,
          response_serializer=ValvePositionController__pb2.Subscribe_Position_Responses.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'sila2.de.cetoni.pumps.syringepumps.valvepositioncontroller.v1.ValvePositionController', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
