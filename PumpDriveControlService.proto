// This file is automatically generated by sila2codegen.proto_generator0.1.9
// :generation date: 2019-07-15 15:46:59.205303

// ---- PLEASE DO NOT MODIFY MANUALLY !! ---

syntax = "proto3";

import "SiLAFramework.proto";

package sila2.de.cetoni.pumps.syringepumps.pumpdrivecontrolservice.v1;

service PumpDriveControlService { 
	// Initialize the pump drive (e.g. by executing a reference move).
	rpc InitializePumpDrive(sila2.de.cetoni.pumps.syringepumps.pumpdrivecontrolservice.v1.InitializePumpDrive_Parameters) returns (sila2.de.cetoni.pumps.syringepumps.pumpdrivecontrolservice.v1.InitializePumpDrive_Responses);

	// Set the pump into enabled state.
	rpc EnablePumpDrive(sila2.de.cetoni.pumps.syringepumps.pumpdrivecontrolservice.v1.EnablePumpDrive_Parameters) returns (sila2.de.cetoni.pumps.syringepumps.pumpdrivecontrolservice.v1.EnablePumpDrive_Responses);

	// Set the pump into disabled state.
	rpc DisablePumpDrive(sila2.de.cetoni.pumps.syringepumps.pumpdrivecontrolservice.v1.DisablePumpDrive_Parameters) returns (sila2.de.cetoni.pumps.syringepumps.pumpdrivecontrolservice.v1.DisablePumpDrive_Responses);

	// remark: Property Parameters are always Empty
	rpc Subscribe_PumpDriveState(sila2.de.cetoni.pumps.syringepumps.pumpdrivecontrolservice.v1.Subscribe_PumpDriveState_Parameters) returns (stream sila2.de.cetoni.pumps.syringepumps.pumpdrivecontrolservice.v1.Subscribe_PumpDriveState_Responses);

	// remark: Property Parameters are always Empty
	rpc Subscribe_FaultState(sila2.de.cetoni.pumps.syringepumps.pumpdrivecontrolservice.v1.Subscribe_FaultState_Parameters) returns (stream sila2.de.cetoni.pumps.syringepumps.pumpdrivecontrolservice.v1.Subscribe_FaultState_Responses);

}

// ------ Data Type definitions -------

// ---- Command Parameter and Response Data Type definitions ----

// Parameter Message: void / empty type
message InitializePumpDrive_Parameters {
}

// Response Message: basic logic/boolean type
message InitializePumpDrive_Responses {
	sila2.org.silastandard.Boolean Success = 1;
}

// Parameter Message: void / empty type
message EnablePumpDrive_Parameters {
}

// Response Message: void / empty type
message EnablePumpDrive_Responses {
}

// Parameter Message: void / empty type
message DisablePumpDrive_Parameters {
}

// Response Message: void / empty type
message DisablePumpDrive_Responses {
}

// ---- Property Parameter and Response Data Type definitions ----

// The current state of the pump. This is either enabled or disabled. Only if the sate is enabled, the pump can dose fluids.
message Subscribe_PumpDriveState_Parameters { }

// PumpDriveState_Response:
//    :param request: gRPC request
//            :param context: gRPC context
//            :param response.PumpDriveState: The current state of the pump. This is either enabled or disabled. Only if the sate is enabled, the pump can dose fluids.
//
message Subscribe_PumpDriveState_Responses {
	 sila2.org.silastandard.Boolean PumpDriveState = 1;
}

// Returns if the pump is in fault state. If the value is true (i.e. the pump is in fault state), it can be cleared by calling EnablePumpDrive.
message Subscribe_FaultState_Parameters { }

// FaultState_Response:
//    :param request: gRPC request
//            :param context: gRPC context
//            :param response.FaultState: Returns if the pump is in fault state. If the value is true (i.e. the pump is in fault state), it can be cleared by calling EnablePumpDrive.
//
message Subscribe_FaultState_Responses {
	 sila2.org.silastandard.Boolean FaultState = 1;
}

