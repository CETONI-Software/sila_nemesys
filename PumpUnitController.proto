// This file is automatically generated by sila2codegen.proto_generator0.1.9
// :generation date: 2019-07-11 10:35:43.738892

// ---- PLEASE DO NOT MODIFY MANUALLY !! ---

syntax = "proto3";

import "SiLAFramework.proto";

package sila2.de.cetoni.pumps.syringepumps.pumpunitcontroller.v1;

service PumpUnitController { 
	// Sets the flow unit for the pump. The flow unit defines the unit to be used for all flow values passed to or retrieved from the pump.
	rpc SetFlowUnit(sila2.de.cetoni.pumps.syringepumps.pumpunitcontroller.v1.SetFlowUnit_Parameters) returns (sila2.de.cetoni.pumps.syringepumps.pumpunitcontroller.v1.SetFlowUnit_Responses);

	// Sets the default volume unit. The volume unit defines the unit to be used for all volume values passed to or retrieved from the pump.
	rpc SetVolumeUnit(sila2.de.cetoni.pumps.syringepumps.pumpunitcontroller.v1.SetVolumeUnit_Parameters) returns (sila2.de.cetoni.pumps.syringepumps.pumpunitcontroller.v1.SetVolumeUnit_Responses);

	// remark: Property Parameters are always Empty
	rpc Subscribe_FlowUnit(sila2.de.cetoni.pumps.syringepumps.pumpunitcontroller.v1.Subscribe_FlowUnit_Parameters) returns (stream sila2.de.cetoni.pumps.syringepumps.pumpunitcontroller.v1.Subscribe_FlowUnit_Responses);

	// remark: Property Parameters are always Empty
	rpc Subscribe_VolumeUnit(sila2.de.cetoni.pumps.syringepumps.pumpunitcontroller.v1.Subscribe_VolumeUnit_Parameters) returns (stream sila2.de.cetoni.pumps.syringepumps.pumpunitcontroller.v1.Subscribe_VolumeUnit_Responses);

}

// ------ Data Type definitions -------

// ---- Command Parameter and Response Data Type definitions ----

// Parameter Message: basic string type
message SetFlowUnit_Parameters {
	sila2.org.silastandard.String FlowUnit = 1;
}

// Response Message: void / empty type
message SetFlowUnit_Responses {
}

// Parameter Message: basic string type
message SetVolumeUnit_Parameters {
	sila2.org.silastandard.String VolumeUnit = 1;
}

// Response Message: void / empty type
message SetVolumeUnit_Responses {
}

// ---- Property Parameter and Response Data Type definitions ----

// The currently used flow unit.
message Subscribe_FlowUnit_Parameters { }

// FlowUnit_Response:
//    :param request: gRPC request
//            :param context: gRPC context
//            :param response.FlowUnit: The currently used flow unit.
//
message Subscribe_FlowUnit_Responses {
	 sila2.org.silastandard.String FlowUnit = 1;
}

// The currently used volume unit.
message Subscribe_VolumeUnit_Parameters { }

// VolumeUnit_Response:
//    :param request: gRPC request
//            :param context: gRPC context
//            :param response.VolumeUnit: The currently used volume unit.
//
message Subscribe_VolumeUnit_Responses {
	 sila2.org.silastandard.String VolumeUnit = 1;
}

