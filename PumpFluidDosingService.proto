// This file is automatically generated by sila2codegen.proto_generator0.1.9
// :generation date: 2019-07-05 11:02:33.096770

// ---- PLEASE DO NOT MODIFY MANUALLY !! ---

syntax = "proto3";

import "SiLAFramework.proto";

package sila2.de.cetoni.pumps.syringepumps.pumpfluiddosingservice.v1;

service PumpFluidDosingService { 
	// Pumps fluid with the given flow rate until the requested fill level is reached. Depending on the requested fill level given in the FillLevel parameter this function may cause aspiration or dispension of fluid.
	rpc SetFillLevel(sila2.de.cetoni.pumps.syringepumps.pumpfluiddosingservice.v1.SetFillLevel_Parameters) returns (sila2.org.silastandard.CommandConfirmation);
	rpc SetFillLevel_Info(sila2.org.silastandard.CommandExecutionUUID) returns (stream sila2.org.silastandard.ExecutionInfo);
	rpc SetFillLevel_Result(sila2.org.silastandard.CommandExecutionUUID) returns (sila2.de.cetoni.pumps.syringepumps.pumpfluiddosingservice.v1.SetFillLevel_Responses);

	// Dose a certain amount of volume with the given flow rate.
	rpc DoseVolume(sila2.de.cetoni.pumps.syringepumps.pumpfluiddosingservice.v1.DoseVolume_Parameters) returns (sila2.org.silastandard.CommandConfirmation);
	rpc DoseVolume_Info(sila2.org.silastandard.CommandExecutionUUID) returns (stream sila2.org.silastandard.ExecutionInfo);
	rpc DoseVolume_Result(sila2.org.silastandard.CommandExecutionUUID) returns (sila2.de.cetoni.pumps.syringepumps.pumpfluiddosingservice.v1.DoseVolume_Responses);

	// Generate a continous flow with the given flow rate. Dosing continues until it gets stopped manually by calling StopDosage or until the pusher reached one of its limits.
	rpc GenerateFlow(sila2.de.cetoni.pumps.syringepumps.pumpfluiddosingservice.v1.GenerateFlow_Parameters) returns (sila2.org.silastandard.CommandConfirmation);
	rpc GenerateFlow_Intermediate(sila2.org.silastandard.CommandExecutionUUID) returns (stream sila2.de.cetoni.pumps.syringepumps.pumpfluiddosingservice.v1.GenerateFlow_IntermediateResponses);
	rpc GenerateFlow_Info(sila2.org.silastandard.CommandExecutionUUID) returns (stream sila2.org.silastandard.ExecutionInfo);
	rpc GenerateFlow_Result(sila2.org.silastandard.CommandExecutionUUID) returns (sila2.de.cetoni.pumps.syringepumps.pumpfluiddosingservice.v1.GenerateFlow_Responses);

	// Stops a currently running dosage immediately.
	rpc StopDosage(sila2.de.cetoni.pumps.syringepumps.pumpfluiddosingservice.v1.StopDosage_Parameters) returns (sila2.de.cetoni.pumps.syringepumps.pumpfluiddosingservice.v1.StopDosage_Responses);

	// remark: Property Parameters are always Empty
	rpc Get_MaxSyringeFillLevel(sila2.de.cetoni.pumps.syringepumps.pumpfluiddosingservice.v1.Get_MaxSyringeFillLevel_Parameters) returns (sila2.de.cetoni.pumps.syringepumps.pumpfluiddosingservice.v1.Get_MaxSyringeFillLevel_Responses);

	// remark: Property Parameters are always Empty
	rpc Subscribe_SyringeFillLevel(sila2.de.cetoni.pumps.syringepumps.pumpfluiddosingservice.v1.Subscribe_SyringeFillLevel_Parameters) returns (stream sila2.de.cetoni.pumps.syringepumps.pumpfluiddosingservice.v1.Subscribe_SyringeFillLevel_Responses);

	// remark: Property Parameters are always Empty
	rpc Get_MaxFlowRate(sila2.de.cetoni.pumps.syringepumps.pumpfluiddosingservice.v1.Get_MaxFlowRate_Parameters) returns (sila2.de.cetoni.pumps.syringepumps.pumpfluiddosingservice.v1.Get_MaxFlowRate_Responses);

	// remark: Property Parameters are always Empty
	rpc Get_MinFlowRate(sila2.de.cetoni.pumps.syringepumps.pumpfluiddosingservice.v1.Get_MinFlowRate_Parameters) returns (sila2.de.cetoni.pumps.syringepumps.pumpfluiddosingservice.v1.Get_MinFlowRate_Responses);

	// remark: Property Parameters are always Empty
	rpc Subscribe_FlowRate(sila2.de.cetoni.pumps.syringepumps.pumpfluiddosingservice.v1.Subscribe_FlowRate_Parameters) returns (stream sila2.de.cetoni.pumps.syringepumps.pumpfluiddosingservice.v1.Subscribe_FlowRate_Responses);

}

// ------ Data Type definitions -------

// Holds a value (e.g. flow rate or fill level) and its unit (e.g. ml/h or ml)
// constr-pattern: 
message DataType_ValueWithUnit {
	  sila2.org.silastandard.Real ValueWithUnit = 1; }

// ---- Command Parameter and Response Data Type definitions ----

// Parameter Message: Holds a value (e.g. flow rate or fill level) and its unit (e.g. ml/h or ml)
message SetFillLevel_Parameters {
	sila2.de.cetoni.pumps.syringepumps.pumpfluiddosingservice.v1.DataType_ValueWithUnit FillLevel = 1;
	sila2.de.cetoni.pumps.syringepumps.pumpfluiddosingservice.v1.DataType_ValueWithUnit FlowRate = 2;
}

// Response Message: basic logic/boolean type
message SetFillLevel_Responses {
	sila2.org.silastandard.Boolean Success = 1;
}

// Parameter Message: Holds a value (e.g. flow rate or fill level) and its unit (e.g. ml/h or ml)
message DoseVolume_Parameters {
	sila2.de.cetoni.pumps.syringepumps.pumpfluiddosingservice.v1.DataType_ValueWithUnit Volume = 1;
	sila2.de.cetoni.pumps.syringepumps.pumpfluiddosingservice.v1.DataType_ValueWithUnit FlowRate = 2;
}

// Response Message: basic logic/boolean type
message DoseVolume_Responses {
	sila2.org.silastandard.Boolean Success = 1;
}

// Parameter Message: Holds a value (e.g. flow rate or fill level) and its unit (e.g. ml/h or ml)
message GenerateFlow_Parameters {
	sila2.de.cetoni.pumps.syringepumps.pumpfluiddosingservice.v1.DataType_ValueWithUnit FlowRate = 1;
}

// Intermediate Response Message: basic string type
message GenerateFlow_IntermediateResponses {
	sila2.org.silastandard.String Test = 1;
}

// Response Message: basic logic/boolean type
message GenerateFlow_Responses {
	sila2.org.silastandard.Boolean Success = 1;
}

// Parameter Message: void / empty type
message StopDosage_Parameters {
}

// Response Message: basic logic/boolean type
message StopDosage_Responses {
	sila2.org.silastandard.Boolean Success = 1;
}

// ---- Property Parameter and Response Data Type definitions ----

// The maximum amount of fluid that the syringe can hold.
message Get_MaxSyringeFillLevel_Parameters { }

// MaxSyringeFillLevel_Response:
//    :param request: gRPC request
//            :param context: gRPC context
//            :param response.MaxSyringeFillLevel: The maximum amount of fluid that the syringe can hold.
//
message Get_MaxSyringeFillLevel_Responses {
	 sila2.de.cetoni.pumps.syringepumps.pumpfluiddosingservice.v1.DataType_ValueWithUnit MaxSyringeFillLevel = 1;
}

// The current amount of fluid left in the syringe.
message Subscribe_SyringeFillLevel_Parameters { }

// SyringeFillLevel_Response:
//    :param request: gRPC request
//            :param context: gRPC context
//            :param response.SyringeFillLevel: The current amount of fluid left in the syringe.
//
message Subscribe_SyringeFillLevel_Responses {
	 sila2.de.cetoni.pumps.syringepumps.pumpfluiddosingservice.v1.DataType_ValueWithUnit SyringeFillLevel = 1;
}

// The maximum value of the flow rate at which this pump can dose a fluid.
message Get_MaxFlowRate_Parameters { }

// MaxFlowRate_Response:
//    :param request: gRPC request
//            :param context: gRPC context
//            :param response.MaxFlowRate: The maximum value of the flow rate at which this pump can dose a fluid.
//
message Get_MaxFlowRate_Responses {
	 sila2.de.cetoni.pumps.syringepumps.pumpfluiddosingservice.v1.DataType_ValueWithUnit MaxFlowRate = 1;
}

// The minimum value of the flow rate at which this pump can dose a fluid.
message Get_MinFlowRate_Parameters { }

// MinFlowRate_Response:
//    :param request: gRPC request
//            :param context: gRPC context
//            :param response.MinFlowRate: The minimum value of the flow rate at which this pump can dose a fluid.
//
message Get_MinFlowRate_Responses {
	 sila2.de.cetoni.pumps.syringepumps.pumpfluiddosingservice.v1.DataType_ValueWithUnit MinFlowRate = 1;
}

// The current value of the flow rate. It is 0 if the pump does not dose any fluid.
message Subscribe_FlowRate_Parameters { }

// FlowRate_Response:
//    :param request: gRPC request
//            :param context: gRPC context
//            :param response.FlowRate: The current value of the flow rate. It is 0 if the pump does not dose any fluid.
//
message Subscribe_FlowRate_Responses {
	 sila2.de.cetoni.pumps.syringepumps.pumpfluiddosingservice.v1.DataType_ValueWithUnit FlowRate = 1;
}

